// Style Points display styles
#define SPOINTS_NONE 0
#define SPOINTS_NUMERICAL 1
#define SPOINTS_FRACTIONAL 2
#define SPOINTS_PERCENTAGE 3

script "StyleRank" ENTER
{
	int oldrank;
	str callout;
	int oldcalloutrank;

	int stylerank_x;
	int stylename_x;
	int stylescore_x;

	int stylerank_y;
	int stylename_y;
	int stylescore_y;

	SetCvar("StyleRank", 0);
	Delay(1);
	while (GetCvar("StyleRankVisible")) {
        int stylerank = GetCvar("StyleRank");

        if      (stylerank == U) SetFont("u_style");
        else if (stylerank == SSS) SetFont("sss_style");
        else if (stylerank == SS) SetFont("ss_style");
        else if (stylerank == S) SetFont("s_style");
        else if (stylerank == A) SetFont("a_style");
        else if (stylerank == B) SetFont("b_style");
        else if (stylerank == C) SetFont("c_style");
        else if (stylerank == D) SetFont("d_style");

        str StyleName;
        str StyleColour;
        str StyleFont;
        switch (stylerank) {
            case U:
                StyleName = "stylerank_u";
                StyleColour = "\c[U_Style]";
                StyleFont = "BIGFONT";
                break;
            case SSS:
                StyleName = "stylerank_sss";
                StyleColour = "\c[SSS_Style]";
                StyleFont = "SMALLFONT";
                break;
            case SS:
                StyleName = "stylerank_ss";
                StyleColour = "\c[SS_Style]";
                StyleFont = "SMALLFONT";
                break;
            case S:
                StyleName = "stylerank_s";
                StyleColour = "\c[S_Style]";
                StyleFont = "SMALLFONT";
                break;
            case A:
                StyleName = "stylerank_a";
                StyleColour = "\c[A_Style]";
                StyleFont = "SMALLFONT";
                break;
            case B:
                StyleName = "stylerank_b";
                StyleColour = "\c[B_Style]";
                StyleFont = "SMALLFONT";
                break;
            case C:
                StyleName = "stylerank_c";
                StyleColour = "\c[C_Style]";
                StyleFont = "SMALLFONT";
                break;
            case D:
                StyleName = "stylerank_d";
                StyleColour = "\c[D_Style]";
                StyleFont = "SMALLFONT";
                break;
            default: // E
                StyleName = "stylerank_base";
                StyleColour = "\c[Gray]";
                StyleFont = "SMALLFONT";
                break;
        }

        stylerank_x  = 1.5;
        stylename_x  = 1.5;
        stylescore_x = 1.5;

        stylerank_y  = 0.16;
        stylename_y  = 0.24;
        stylescore_y = 0.28;

        if (stylerank > 0 && ClassifyActor(0) & ACTOR_ALIVE) {
            HudMessage(s:"A"; HUDMSG_PLAIN, 43, CR_UNTRANSLATED, stylerank_x, stylerank_y, 0.1, 1.0);
            if (stylerank > oldrank && stylerank > oldcalloutrank && GetCvar("StyleCallouts")) {
                if      (stylerank == U)   callout = "sstyle/unlimited";
                else if (stylerank == SSS) callout = "sstyle/supersonic";
                else if (stylerank == SS)  callout = "sstyle/amazing";
                else if (stylerank == S)   callout = "sstyle/outstanding";
                else if (stylerank == A)   callout = "sstyle/awesome";
                else if (stylerank == B)   callout = "sstyle/great";
                else if (stylerank == C)   callout = "sstyle/good";
                else if (stylerank == D)   callout = "sstyle/dontgiveup";
                oldcalloutrank = stylerank;
                PlaySound(0, callout, 4096, 1.0, false, ATTN_NONE, false);
            }
        }

        int stylescore = GetCvar("StyleScore");

        if (stylerank < oldcalloutrank - 1 || stylescore <= 0) {
            oldcalloutrank = 0;
        }

        if (stylescore > 0) {
            SetFont(StyleFont);
            HudMessage(s:StyleColour, l:StyleName; HUDMSG_PLAIN, 42, CR_WHITE, stylename_x, stylename_y, 0.1, 1.0);
        }

        oldrank = GetCvar("StyleRank");

        int StylePointsDisplay = GetCvar("StylePoints");
        if (StylePointsDisplay != SPOINTS_NONE) {
            int display_score = stylescore % 25000 % 25000;

            if (stylerank == U && display_score == 0) {
                display_score = 25000;
            }

            if (stylescore >= 1) {
                SetFont("SMALLFONT");
                if (StylePointsDisplay == SPOINTS_NUMERICAL) {
                    HudMessage(d:display_score; HUDMSG_PLAIN, 41, CR_WHITE, stylescore_x, stylescore_y, 0.1, 1.0);
                }
                else if (StylePointsDisplay == SPOINTS_FRACTIONAL) {
                    HudMessage(d:display_score / 100, s:"/", d:250; HUDMSG_PLAIN, 41, CR_WHITE, stylescore_x, stylescore_y, 0.1, 1.0);
                }
                else if (StylePointsDisplay == SPOINTS_PERCENTAGE) {
                    HudMessage(d:display_score / 250, s:"%"; HUDMSG_PLAIN, 41, CR_WHITE, stylescore_x, stylescore_y, 0.1, 1.0);
                }
            }
        }

        Delay(1);
    }
}